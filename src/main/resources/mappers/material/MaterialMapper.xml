<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guroomsoft.icms.biz.material.dao.MaterialDAO">

    <!-- 재질 마스터 목록 조회 -->
    <select id="selectMaterial" resultType="material" parameterType="material">
        select /* MaterialMapper.selectMaterial */
            a.material_cd, a.material_nm, a.raw_material_cd,
            dbo.FN_GET_CODE_NAME('B01', a.raw_material_cd) AS rawMaterialNm,
            a.steel_grade, a.customer_mat_cd, a.remark, a.use_at, dbo.FN_GET_CODE_NAME('C03', a.use_at) AS useAtNm,
            CONVERT(VARCHAR(20), a.reg_dt, 20) AS regDt, b.account_name AS accountNm
        from MT_MATERIAL a WITH(NOLOCK)
            left outer join ST_USERS b on a.reg_uid = b.user_uid
        <where>
            <if test='materialCd != null and !materialCd.equals("")'> AND a.material_cd = #{materialCd}</if>
            <if test='materialNm != null and !materialNm.equals("")'> AND CONCAT(a.material_cd, a.material_nm) LIKE CONCAT('%', #{materialNm}, '%') </if>
            <if test='rawMaterialCd != null and !rawMaterialCd.equals("")'> AND a.raw_material_cd = #{rawMaterialCd} </if>
            <if test='customerMatCd != null and !customerMatCd.equals("")'> AND a.customer_mat_cd LIKE CONCAT('%', #{customerMatCd}, '%') </if>
            <if test='steelGrade != null and !steelGrade.equals("")'> AND a.steel_grade LIKE CONCAT('%', #{steelGrade}, '%') </if>
            <if test='remark != null and !remark.equals("")'> AND a.remark LIKE CONCAT('%', #{remark}, '%') </if>
        </where>
        order by a.raw_material_cd, a.steel_grade, a.material_cd
    </select>

    <!-- 재질 마스터 단건 조회 -->
    <select id="selectMaterialByKey" resultType="material" parameterType="java.lang.String">
        select /* MaterialMapper.selectMaterialByKey */
            a.material_cd, a.material_nm, a.raw_material_cd,
            dbo.FN_GET_CODE_NAME('B01', a.raw_material_cd) AS rawMaterialNm,
            a.steel_grade, a.customer_mat_cd, a.remark, a.use_at
        from MT_MATERIAL a WITH(NOLOCK)
        where a.material_cd = #{materialCd}
          and a.material_nm = #{materialNm}
    </select>

    <!-- 재질 마스터 등록 -->
    <insert id="insertMaterial" parameterType="material">
        insert /* MaterialMapper.insertMaterial */
        into MT_MATERIAL (
            material_cd, material_nm, raw_material_cd, steel_grade, customer_mat_cd, remark, use_at, reg_dt, reg_uid
        ) values (
            #{materialCd}, #{materialNm}, #{rawMaterialCd}, #{steelGrade}, #{customerMatCd}, #{remark},
                  #{useAt}, GETDATE(), #{regUid}
        )
    </insert>

    <!-- 재질 마스터 수정 -->
    <update id="updateMaterial" parameterType="material">
        update /* MaterialMapper.updateMaterial */
            MT_MATERIAL
        <set>
            <if test='rawMaterialCd != null and !rawMaterialCd.equals("")'>raw_material_cd = #{rawMaterialCd},</if>
            <if test='steelGrade != null'>steel_grade = #{steelGrade},</if>
            <if test='customerMatCd != null'>customer_mat_cd = #{customerMatCd},</if>
            <if test='remark != null'>remark = #{remark},</if>
            <if test='useAt != null and !useAt.equals("")'>use_at = #{useAt},</if>
            mod_dt = GETDATE(),
            mod_uid = #{modUid}
        </set>
        where material_cd = #{materialCd}
            and material_nm = #{materialNm}
    </update>

    <!-- 재질 마스터 등록 및 수정 -->
    <insert id="saveMaterial" parameterType="material">
        MERGE /* MaterialMapper.saveMaterial */
        INTO MT_MATERIAL a
        USING (
            SELECT
                #{materialCd} as material_cd,
                #{materialNm} as material_nm,
                #{rawMaterialCd} as raw_material_cd,
                #{steelGrade} as steel_grade,
                #{customerMatCd} as customer_mat_cd,
                #{remark} as remark,
                #{useAt} as use_at,
                #{regUid} as reg_uid
        ) b
        ON (a.material_cd = b.material_cd and a.material_nm = b.material_nm)
        WHEN MATCHED THEN
            UPDATE
                SET raw_material_cd = b.raw_material_cd, steel_grade = b.steel_grade,
                    customer_mat_cd = b.customer_mat_cd, remark = b.remark, use_at = b.use_at, mod_dt = GETDATE(),
                    mod_uid = b.reg_uid
        WHEN NOT MATCHED THEN
            INSERT (material_cd, material_nm, raw_material_cd, steel_grade, customer_mat_cd, remark, use_at, reg_dt, reg_uid)
            VALUES (
                b.material_cd, b.material_nm, b.raw_material_cd, b.steel_grade, b.customer_mat_cd, b.remark,
                b.use_at, GETDATE(), b.reg_uid);
    </insert>

    <!-- 재질 마스터 삭제 -->
    <delete id="deleteMaterial" parameterType="java.lang.String">
        delete /* MaterialMapper.updateMaterial */
        from MT_MATERIAL
        where material_cd = #{materialCd}
          <if test="materialNm != null">and material_nm = #{materialNm}</if>
    </delete>
</mapper>