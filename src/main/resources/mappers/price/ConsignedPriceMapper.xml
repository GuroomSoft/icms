<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guroomsoft.icms.biz.price.dao.ConsignedPriceDAO">
    <!-- CONSIGNED_PRICE_SEQ 을 사용해서 등록 -->

    <!-- 고객사 사급단가 등록 -->
    <insert id="insertConsignedPrice" parameterType="consignedPrice" >
        <selectKey keyProperty="cpSeq" resultType="long" order="BEFORE">
            SELECT NEXT VALUE FOR CONSIGNED_PRICE_SEQ
        </selectKey>
        insert /* ConsignedPriceMapper.insertConsignedPrice */
          into HT_CONSIGNED_PRICE (
            cp_seq, plant_cd, bp_cd, mat_cd, consigned_price, origin_consigned_price,
            cur_unit, price_unit, sales_unit, bgn_valid_date, end_valid_date, if_seq, if_type,
            if_result, if_message, reg_dt, reg_uid
        ) VALUES (
            #{cpSeq}, #{plantCd}, #{bpCd}, #{matCd}, #{consignedPrice}, #{consignedPrice} / (#{priceUnit} * 1.0),
            #{curUnit}, #{priceUnit}, #{salesUnit}, #{bgnValidDate}, #{endValidDate}, #{ifSeq}, #{ifType}, #{ifResult},
            #{ifMessage}, GETDATE(), #{regUid}
        )
    </insert>

    <!-- 고객사 사급단가 삭제 -->
    <delete id="deleteConsignedPrice" parameterType="consignedPrice">
        delete /* ConsignedPriceMapper.deleteConsignedPrice */
          from HT_CONSIGNED_PRICE
        <where>
            <if test='cpSeq != null and cpSeq.longValue() gt 0'>and cp_seq = #{cpSeq}</if>
            <if test='plantCd != null'>and plant_cd = #{plantCd}</if>
            <if test='bgnValidDate != null'>and bgn_valid_date = #{bgnValidDate}</if>
            <if test='endValidDate != null'>and end_valid_date = #{endValidDate}</if>
            <if test='bpCd != null'>and bp_cd = #{bpCd}</if>
            <if test='matCd != null'>and mat_cd = #{matCd}</if>
        </where>
    </delete>

    <!-- 고객사 사급단가 병합 -->
    <insert id="mergeConsignedPrice" parameterType="consignedPrice">
        MERGE /* ConsignedPriceMapper.mergeConsignedPrice */
            INTO HT_CONSIGNED_PRICE a
        USING (
            SELECT
                #{plantCd} AS plant_cd,
                #{bpCd} AS bp_cd,
                #{matCd} AS mat_cd,
                #{consignedPrice} AS consigned_price,
                #{curUnit} AS cur_unit,
                #{priceUnit} AS price_unit,
                #{salesUnit} AS sales_unit,
                #{bgnValidDate} AS bgn_valid_date,
                #{endValidDate} AS end_valid_date,
                <if test='ifSeq != null'>#{ifSeq} AS if_seq,</if>
                <if test="ifType != null">#{ifType} AS if_type,</if>
                <if test="ifResult != null">#{ifResult} AS if_result,</if>
                <if test="ifMessage != null">#{ifMessage} AS if_message,</if>
                GETDATE() AS reg_dt,
                #{regUid} AS reg_uid
            ) b ON (a.plant_cd = b.plant_cd and a.bgn_valid_date = b.bgn_valid_date and a.end_valid_date = b.end_valid_date
                        and a.bp_cd = b.bp_cd and a.mat_cd = b.mat_cd)
        WHEN MATCHED THEN
        UPDATE SET
            plant_cd = b.plant_cd,
            bp_cd = b.bp_cd,
            mat_cd = b.mat_cd,
            consigned_price = b.consigned_price,
            origin_consigned_price = b.consigned_price / (b.price_unit * 1.0),
            cur_unit = b.cur_unit,
            price_unit = b.price_unit,
            sales_unit = b.sales_unit,
            bgn_valid_date = b.bgn_valid_date,
            end_valid_date = b.end_valid_date,
            <if test='ifSeq != null'>if_seq = b.if_seq,</if>
            <if test="ifType != null">if_type = b.if_type,</if>
            <if test="ifResult != null">if_result = b.if_result,</if>
            <if test="ifMessage != null">if_message = b.if_message,</if>
            mod_uid = b.reg_uid,
            mod_dt = b.reg_dt
            WHEN NOT MATCHED THEN
        INSERT (
            cp_seq, plant_cd, bp_cd, mat_cd, consigned_price, origin_consigned_price,
            cur_unit, price_unit, sales_unit, bgn_valid_date, end_valid_date,
            <if test='ifSeq != null'>if_seq,</if>
            <if test="ifType != null">if_type,</if>
            <if test="ifResult != null">if_result,</if>
            <if test="ifMessage != null">if_message,</if>
            reg_dt, reg_uid
        ) VALUES (
                (SELECT NEXT VALUE FOR CONSIGNED_PRICE_SEQ),
                b.plant_cd, b.bp_cd, b.mat_cd, b.consigned_price, b.origin_consigned_price,
                b.cur_unit, b.price_unit, b.sales_unit, b.bgn_valid_date, b.end_valid_date,
                <if test='ifSeq != null'>b.if_seq,</if>
                <if test="ifType != null">b.if_type,</if>
                <if test="ifResult != null">b.if_result,</if>
                <if test="ifMessage != null">b.if_message,</if>
                b.reg_dt, b.reg_uid
        );
    </insert>

    <!-- 고객사 사급단가 목록 조회 -->
    <select id="selectConsignedPrice" parameterType="consignedPriceReq" resultType="consignedPrice">
        select /* ConsignedPriceMapper.selectConsignedPrice */
            a.*, c.plant_nm, m.bp_nm AS bpNm, b.item_nm AS mat_nm, d.account_id AS regAccountId
          from HT_CONSIGNED_PRICE a WITH(NOLOCK)
               left outer join MT_BIZ_PARTNER m WITH(NOLOCK) ON a.bp_cd = m.bp_cd
               left outer join MT_ITEM b WITH(NOLOCK) ON a.mat_cd = b.item_no
               left outer join MT_PLANT c WITH(NOLOCK) ON a.plant_cd = c.plant_cd
               left outer join ST_USERS d WITH(NOLOCK) ON a.reg_uid = d.user_uid
        <where>
            <if test='plantCd != null and !plantCd.equals("")'>and a.plant_cd = #{plantCd}</if>
            <if test='baseDate != null and !baseDate.equals("")'>AND replace(replace(#{baseDate}, '-', ''), '.', '') BETWEEN replace(replace(a.bgn_valid_date, '-', ''), '.', '') and dbo.FN_IS_EMPTY(replace(replace(a.end_valid_date, '-', ''), '.', ''), '99991231')</if>
            <if test='bpCd != null and !bpCd.equals("")'>and a.bp_cd = #{bpCd}</if>
            <if test='searchWord != null and !searchWord.equals("")'>and a.mat_cd LIKE CONCAT('%', #{searchWord}, '%')</if>
        </where>
        order by a.plant_cd, a.bp_cd, a.mat_cd
        <if test="rowCountPerPage gt 0">
            offset #{startOffset} rows
            fetch next #{rowCountPerPage} rows only
        </if>
    </select>

    <!-- 고객사 사급단가 카운트 조회 -->
    <select id="getConsignedPriceCount" parameterType="consignedPriceReq" resultType="int">
        select /* ConsignedPriceMapper.getConsignedPriceCount */
            count(*)
        from HT_CONSIGNED_PRICE a WITH(NOLOCK)
            left outer join MT_ITEM b WITH(NOLOCK) ON a.mat_cd = b.item_no
            left outer join MT_PLANT c WITH(NOLOCK) ON a.plant_cd = c.plant_cd
        <where>
            <if test='plantCd != null and !plantCd.equals("")'>and a.plant_cd = #{plantCd}</if>
            <if test='baseDate != null and !baseDate.equals("")'>AND replace(replace(#{baseDate}, '-', ''), '.', '') BETWEEN replace(replace(a.bgn_valid_date, '-', ''), '.', '') and dbo.FN_IS_EMPTY(replace(replace(a.end_valid_date, '-', ''), '.', ''), '99991231')</if>
            <if test='bpCd != null and !bpCd.equals("")'>and a.bp_cd = #{bpCd}</if>
            <if test='searchWord != null and !searchWord.equals("")'>and a.mat_cd LIKE CONCAT('%', #{searchWord}, '%')</if>
        </where>
    </select>

</mapper>